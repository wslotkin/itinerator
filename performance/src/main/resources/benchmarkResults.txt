11/3/15, commit a7e2331, baseline
Result "runOptimizer":
  4.849 ±(99.9%) 0.154 ops/s [Average]
  (min, avg, max) = (1.984, 4.849, 6.041), stdev = 0.653
  CI (99.9%): [4.695, 5.003] (assumes normal distribution)

11/4/15, commit 045134d, after converting evaluators to lambdas
Result "runOptimizer":
  5.614 ±(99.9%) 0.067 ops/s [Average]
  (min, avg, max) = (4.413, 5.614, 6.558), stdev = 0.286
  CI (99.9%): [5.546, 5.681] (assumes normal distribution)

11/4/15, commit d5f02d9, after switching from org.joda to java.time
Result "runOptimizer":
  11.624 ±(99.9%) 0.290 ops/s [Average]
  (min, avg, max) = (6.344, 11.624, 13.584), stdev = 1.229
  CI (99.9%): [11.334, 11.915] (assumes normal distribution)

11/5/15, commit 9c926ba, after simplifying TimeUtil logic and converted to use Ranges
Result "runOptimizer":
  14.071 ±(99.9%) 0.128 ops/s [Average]
  (min, avg, max) = (10.418, 14.071, 15.273), stdev = 0.541
  CI (99.9%): [13.943, 14.198] (assumes normal distribution)

11/6/15, commit 35ca038, refactoring Range
Result "runOptimizer":
  14.877 ±(99.9%) 0.301 ops/s [Average]
  (min, avg, max) = (11.223, 14.877, 16.921), stdev = 1.273
  CI (99.9%): [14.576, 15.177] (assumes normal distribution)